// ------------------------------------------------------------------------------
//  <autogenerated>
//      This code was generated by a tool.
//      Mono Runtime Version: 4.0.30319.1
// 
//      Changes to this file may cause incorrect behavior and will be lost if 
//      the code is regenerated.
//  </autogenerated>
// ------------------------------------------------------------------------------
using System;
using System.Collections.Generic;
using UnityEngine;

public  delegate void OnRequestResp(NetworkHttpRequest request, WWW stream);
public delegate void OnRequestRespScript(NetworkHttpRequest request, WWW stream, string respFuncName);

public class NetWorkHandler : MonoBehaviour
{
    void Start()
    {
        genRequest(maxCount);
    }

	public virtual void Request(string url, Dictionary<string, string> prams, string msgid, string respFuncName)
	{
        getRequest().Request(url, prams, msgid, respFuncName, this.onNetWorkRespScript);
	}

    public virtual void Request(string url, Dictionary<string, string> prams, string msgid, OnRequestResp cb)
    {
        getRequest().Request(url, prams, msgid, cb);
    }

    public virtual void Request(string url, string respFuncName)
	{
        getRequest().Request(url, respFuncName, this.onNetWorkRespScript);
	}

    public virtual void Request(string url, OnRequestResp cb)
    {
        getRequest().Request(url, cb);
    }
    
    protected virtual void onNetWorkRespScript(NetworkHttpRequest request, WWW stream, string respFuncName)
    {
        
    }

    protected virtual void onNetWorkRequestOver(NetworkHttpRequest request)
    {
        if (freeList.Count >= maxCount)
        {
            Component.Destroy(request);
        }
        else
        {
            freeList.Push(request);
        }
    }

    NetworkHttpRequest getRequest()
    {
        if (freeList.Count <= 0)
        {
            genRequest(genCountBatch);
        }
        NetworkHttpRequest request = freeList.Pop();
        if (request == null || request.IsBusy)
        {
            request = gameObject.AddComponent<NetworkHttpRequest>();
        }
        request.ReturnNetWorkHandler = this.onNetWorkRequestOver;
        return request;
    }

    void genRequest(int count)
    {
        while ( --count >= 0)
        {
            NetworkHttpRequest request = gameObject.AddComponent<NetworkHttpRequest>();
            request.ReturnNetWorkHandler = this.onNetWorkRequestOver;
            freeList.Push(request);
        }
    }

    static Stack<NetworkHttpRequest> freeList = new Stack<NetworkHttpRequest>();
    int maxCount = 20;
    int genCountBatch = 5;
}